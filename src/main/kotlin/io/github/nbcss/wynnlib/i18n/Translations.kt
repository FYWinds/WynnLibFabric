package io.github.nbcss.wynnlib.i18n

import io.github.nbcss.wynnlib.i18n.Translatable.Companion.from

object Translations {
    val UI_EQUIPMENTS: Translatable = from("wynnlib.ui.equipments")
    val UI_INGREDIENTS: Translatable = from("wynnlib.ui.ingredients")
    val UI_POWDERS: Translatable = from("wynnlib.ui.powders")
    val UI_MATERIALS: Translatable = from("wynnlib.ui.materials")
    val UI_CRAFTER: Translatable = from("wynnlib.ui.crafter")
    val UI_ABILITY_TREE: Translatable = from("wynnlib.ui.ability_tree")
    val UI_TREE_BUILDS: Translatable = from("wynnlib.ui.ability_tree_builds")
    val UI_CONFIGURATION: Translatable = from("wynnlib.ui.configuration")
    val UI_ADVANCE_SEARCH: Translatable = from("wynnlib.ui.advance_search")
    val UI_FILTER_ITEM_TYPE: Translatable = from("wynnlib.ui.filter_condition.item_type")
    val UI_FILTER_RARITY: Translatable = from("wynnlib.ui.filter_condition.rarity")
    val UI_FILTER_IDENTIFICATION: Translatable = from("wynnlib.ui.filter_condition.id")
    val UI_CLIPBOARD_IMPORT: Translatable = from("wynnlib.ui.import_clipboard")
    val UI_CLIPBOARD_EXPORT: Translatable = from("wynnlib.ui.export_clipboard")
    val UI_BUTTON_SAVE: Translatable = from("wynnlib.ui.button.save")
    val UI_BUTTON_DELETE: Translatable = from("wynnlib.ui.button.delete")
    val UI_BUTTON_SHARE: Translatable = from("wynnlib.ui.button.share")
    val SETTINGS_GENERAL: Translatable = from("wynnlib.setting_category.general")
    val SETTINGS_MATCHERS: Translatable = from("wynnlib.setting_category.matchers")
    val SETTINGS_INDICATORS: Translatable = from("wynnlib.setting_category.indicators")
    val MATCHER_ITEM_PROTECTION: Translatable = from("wynnlib.matcher_settings.item_protection")
    val TOOLTIP_CLASS_REQ: Translatable = from("wynnlib.tooltip.class_req")
    val TOOLTIP_QUEST_REQ: Translatable = from("wynnlib.tooltip.quest_req")
    val TOOLTIP_COMBAT_LV_REQ: Translatable = from("wynnlib.tooltip.combat_level_req")
    val TOOLTIP_CRAFTING_LV_REQ: Translatable = from("wynnlib.tooltip.crafting_level_req")
    val TOOLTIP_GATHERING_LV_REQ: Translatable = from("wynnlib.tooltip.gathering_level_req")
    val TOOLTIP_SKILL_REQ: Translatable = from("wynnlib.tooltip.skill_point_req")
    val TOOLTIP_SKILL_MODIFIER: Translatable = from("wynnlib.tooltip.skill_point_modifier")
    val TOOLTIP_TO: Translatable = from("wynnlib.tooltip.to")
    val TOOLTIP_OR: Translatable = from("wynnlib.tooltip.or")
    val TOOLTIP_POWDER_SLOTS: Translatable = from("wynnlib.tooltip.powder_slots")
    val TOOLTIP_MATERIAL_RECIPES: Translatable = from("wynnlib.tooltip.material_recipes")
    val TOOLTIP_ING_EFFECTIVENESS: Translatable = from("wynnlib.tooltip.ingredient.effectiveness")
    val TOOLTIP_ING_DURABILITY: Translatable = from("wynnlib.tooltip.ingredient.durability")
    val TOOLTIP_ING_DURATION: Translatable = from("wynnlib.tooltip.ingredient.duration")
    val TOOLTIP_ING_CHARGES: Translatable = from("wynnlib.tooltip.ingredient.charges")
    val TOOLTIP_CRAFTING_ING: Translatable = from("wynnlib.tooltip.crafting_ingredient")
    val TOOLTIP_CRAFTING_MAT: Translatable = from("wynnlib.tooltip.crafting_material")
    val TOOLTIP_ATTACK_SPEED: Translatable = from("wynnlib.tooltip.attack_speed")
    val TOOLTIP_NEUTRAL_DAMAGE: Translatable = from("wynnlib.tooltip.neutral_damage")
    val TOOLTIP_AVERAGE_DAMAGE: Translatable = from("wynnlib.tooltip.average_damage")
    val TOOLTIP_HEALTH: Translatable = from("wynnlib.tooltip.health")
    val TOOLTIP_POWDER_CONVERT: Translatable = from("wynnlib.tooltip.powder.convert_neutral")
    val TOOLTIP_POWDER_SPECIAL: Translatable = from("wynnlib.tooltip.powder.special")
    val TOOLTIP_POWDER_WEAPON: Translatable = from("wynnlib.tooltip.powder.on_weapon")
    val TOOLTIP_POWDER_ARMOUR: Translatable = from("wynnlib.tooltip.powder.on_armour")
    val TOOLTIP_POWDER_CRAFTING: Translatable = from("wynnlib.tooltip.powder.in_crafting")
    val TOOLTIP_ARCHETYPE_TITLE: Translatable = from("wynnlib.tooltip.archetype.title")
    val TOOLTIP_ARCHETYPE_ABILITIES: Translatable = from("wynnlib.tooltip.archetype.abilities")
    val TOOLTIP_ABILITY_LIST: Translatable = from("wynnlib.tooltip.ability_build.abilities")
    val TOOLTIP_ABILITY_CLICK_COMBO: Translatable = from("wynnlib.tooltip.ability.click_combo")
    val TOOLTIP_ABILITY_BLOCKS: Translatable = from("wynnlib.tooltip.ability.blocks")
    val TOOLTIP_ABILITY_POINTS: Translatable = from("wynnlib.tooltip.ability.cost")
    val TOOLTIP_ABILITY_DEPENDENCY: Translatable = from("wynnlib.tooltip.ability.ability_req")
    val TOOLTIP_ABILITY_MIN_ARCHETYPE: Translatable = from("wynnlib.tooltip.ability.archetype_req")
    val TOOLTIP_ABILITY_MANA_COST: Translatable = from("wynnlib.tooltip.ability.mana_cost")
    val TOOLTIP_ABILITY_RANGE: Translatable = from("wynnlib.tooltip.ability.range")
    val TOOLTIP_ABILITY_WINDED_BOOSTERS: Translatable = from("wynnlib.tooltip.ability.winded_boosts")
    val TOOLTIP_ABILITY_CHANCE: Translatable = from("wynnlib.tooltip.ability.chance")
    val TOOLTIP_ABILITY_COOLDOWN: Translatable = from("wynnlib.tooltip.ability.cooldown")
    val TOOLTIP_ABILITY_HITS: Translatable = from("wynnlib.tooltip.ability.hits")
    val TOOLTIP_ABILITY_PER_SEC: Translatable = from("wynnlib.tooltip.ability.per_second")
    val TOOLTIP_ABILITY_DAMAGE_INTERVAL: Translatable = from("wynnlib.tooltip.ability.damage_interval")
    val TOOLTIP_ABILITY_INTERVAL_HITS: Translatable = from("wynnlib.tooltip.ability.damage_interval_hits")
    val TOOLTIP_ABILITY_MAGE_ORBS_OF_LIGHT_HP: Translatable = from("wynnlib.tooltip.ability.mage_orbs_of_light_hp")
    val TOOLTIP_ABILITY_MAGE_ORBS_OF_LIGHT_LOSS: Translatable = from("wynnlib.tooltip.ability.mage_orbs_of_light_loss")
    val TOOLTIP_ABILITY_MAGE_LIGHTWEAVER_ORBS: Translatable = from("wynnlib.tooltip.ability.mage_lightweaver_orbs")
    val TOOLTIP_ABILITY_MAGE_TIMELOCK_TIP: Translatable = from("wynnlib.tooltip.ability.mage_timelock_absorb")
    val TOOLTIP_ABILITY_ASSASSIN_BLOOM_TIP: Translatable = from("wynnlib.tooltip.ability.assassin_bloom")
    val TOOLTIP_ABILITY_ASSASSIN_SHURIKENS_BOUNCE: Translatable =
        from("wynnlib.tooltip.ability.assassin_shurikens_bounce")
    val TOOLTIP_ABILITY_SHAMAN_REGENERATION: Translatable = from("wynnlib.tooltip.ability.shaman_regeneration")
    val TOOLTIP_ABILITY_SHAMAN_BLOOD_TRANSFER: Translatable = from("wynnlib.tooltip.ability.shaman_blood_transfer")
    val TOOLTIP_ABILITY_UNUSABLE: Translatable = from("wynnlib.tooltip.ability.unusable_warning")
    val TOOLTIP_ABILITY_LOCKED: Translatable = from("wynnlib.tooltip.ability.deactivate_disabled")
    val TOOLTIP_ABILITY_EMPTY_LIST: Translatable = from("wynnlib.tooltip.ability.empty_selection")
    val TOOLTIP_ABILITY_CLICK_TO_MODIFY: Translatable = from("wynnlib.tooltip.ability.click_to_modify")
    val TOOLTIP_ABILITY_NEW_ABILITIES: Translatable = from("wynnlib.tooltip.ability.new_abilities")
    val TOOLTIP_ABILITY_REMOVED_ABILITIES: Translatable = from("wynnlib.tooltip.ability.remove_abilities")
    val TOOLTIP_ABILITY_REPLACING: Translatable = from("wynnlib.tooltip.ability.replacing")
    val TOOLTIP_ABILITY_MAX: Translatable = from("wynnlib.tooltip.ability.maximum")
    val TOOLTIP_ABILITY_TOTAL_DAMAGE: Translatable = from("wynnlib.tooltip.ability.total_damage")
    val TOOLTIP_ABILITY_DAMAGE_BONUS: Translatable = from("wynnlib.tooltip.ability.damage_bonus")
    val TOOLTIP_ABILITY_MAIN_ATTACK_DAMAGE: Translatable = from("wynnlib.tooltip.ability.main_attack_damage")
    val TOOLTIP_ABILITY_MAIN_ATTACK_RANGE: Translatable = from("wynnlib.tooltip.ability.main_attack_range")
    val TOOLTIP_ABILITY_TOTAL_HEAL: Translatable = from("wynnlib.tooltip.ability.total_heal")
    val TOOLTIP_ABILITY_TOTAL_HEAL_SUFFIX: Translatable = from("wynnlib.tooltip.ability.heal_max_hp")
    val TOOLTIP_ABILITY_PULSE_HEAL: Translatable = from("wynnlib.tooltip.ability.pulse_heal")
    val TOOLTIP_ABILITY_UPGRADE: Translatable = from("wynnlib.tooltip.ability.upgrade")
    val TOOLTIP_ABILITY_OVERVIEW: Translatable = from("wynnlib.tooltip.ability.overview_list")
    val TOOLTIP_ABILITY_AREA_OF_EFFECT: Translatable = from("wynnlib.tooltip.ability.area_of_effect")
    val TOOLTIP_ABILITY_BONUS_DAMAGE_RAW: Translatable = from("wynnlib.tooltip.ability.damage_bonus.raw")
    val TOOLTIP_ABILITY_BONUS_DAMAGE_FOCUS: Translatable = from("wynnlib.tooltip.ability.damage_bonus.per_focus")
    val TOOLTIP_ABILITY_BONUS_DAMAGE_MARKED: Translatable = from("wynnlib.tooltip.ability.damage_bonus.per_marked")
    val TOOLTIP_ABILITY_EFFECT: Translatable = from("wynnlib.tooltip.ability.effect")
    val TOOLTIP_ABILITY_DURATION: Translatable = from("wynnlib.tooltip.ability.duration")
    val TOOLTIP_ABILITY_CHARGES: Translatable = from("wynnlib.tooltip.ability.charges")
    val TOOLTIP_SUFFIX_BLOCK: Translatable = from("wynnlib.tooltip.suffix.block")
    val TOOLTIP_SUFFIX_BLOCKS: Translatable = from("wynnlib.tooltip.suffix.blocks")
    val TOOLTIP_SUFFIX_S: Translatable = from("wynnlib.tooltip.suffix.s")
    val INDICATOR_SUFFIX_S: Translatable = from("wynnlib.indicator_suffix.sec")
    val TOOLTIP_SUFFIX_PER_S: Translatable = from("wynnlib.tooltip.suffix.per_s")
    val TOOLTIP_SHIFT_UPGRADE: Translatable = from("wynnlib.tooltip.shift_for_upgrade_description")

    //powder spec
    val TOOLTIP_POWDER_SPEC_DURATION: Translatable = from("wynnlib.powder_spec.tooltip.duration")
    val TOOLTIP_POWDER_SPEC_DAMAGE: Translatable = from("wynnlib.powder_spec.tooltip.damage")
    val TOOLTIP_POWDER_SPEC_DAMAGE_BOOST: Translatable = from("wynnlib.powder_spec.tooltip.damage_boost")
    val TOOLTIP_POWDER_SPEC_RADIUS: Translatable = from("wynnlib.powder_spec.tooltip.radius")
    val TOOLTIP_POWDER_SPEC_CHAINS: Translatable = from("wynnlib.powder_spec.tooltip.chains")
    val TOOLTIP_POWDER_SPEC_HP_LOST_MIN: Translatable = from("wynnlib.powder_spec.tooltip.min_lost_health")
    val TOOLTIP_POWDER_SPEC_KNOCKBACK: Translatable = from("wynnlib.powder_spec.tooltip.knockback")
    val SUFFIX_POWDER_SPEC_SEC: Translatable = from("wynnlib.powder_spec.suffix.seconds")
    val SUFFIX_POWDER_SPEC_BLOCKS: Translatable = from("wynnlib.powder_spec.suffix.blocks")
    val SUFFIX_POWDER_SPEC_DAM_PER_MANA: Translatable = from("wynnlib.powder_spec.suffix.damage_per_mana")
    val SUFFIX_POWDER_SPEC_SEC_PER_MANA: Translatable = from("wynnlib.powder_spec.suffix.sec_per_mana")

    //ability spec
    val TOOLTIP_ABILITY_ARCHER_STREAM: Translatable = from("wynnlib.gameplay.archer_stream")
    val TOOLTIP_ABILITY_ARCHER_SENTIENT_BOWS: Translatable = from("wynnlib.gameplay.archer_sentient_bows")
    val TOOLTIP_ABILITY_ARCHER_TRAPS: Translatable = from("wynnlib.gameplay.archer_trap")
    val TOOLTIP_ABILITY_ARCHER_FOCUS: Translatable = from("wynnlib.gameplay.archer_focus")
    val TOOLTIP_ABILITY_MAGE_WINDED: Translatable = from("wynnlib.gameplay.mage_winded")
    val TOOLTIP_ABILITY_MAGE_MANA_BANK: Translatable = from("wynnlib.gameplay.mage_mana_bank")
    val TOOLTIP_ABILITY_MAGE_MANA_STORE: Translatable = from("wynnlib.tooltip.ability.mage_mana_store")
    val TOOLTIP_ABILITY_MAGE_BLINKS: Translatable = from("wynnlib.gameplay.mage_teleport_blinks")
    val TOOLTIP_ABILITY_MAGE_ORBS_OF_LIGHT: Translatable = from("wynnlib.gameplay.mage_orbs_of_light")
    val TOOLTIP_ABILITY_ASSASSIN_SMOKE_BOMBS: Translatable = from("wynnlib.gameplay.assassin_smoke_bombs")
    val TOOLTIP_ABILITY_ASSASSIN_CLONES: Translatable = from("wynnlib.gameplay.assassin_clones")
    val TOOLTIP_ABILITY_ASSASSIN_MARKED: Translatable = from("wynnlib.gameplay.assassin_marked")
    val TOOLTIP_ABILITY_SHAMAN_BEAMS: Translatable = from("wynnlib.gameplay.shaman_main_attack_beam")
    val TOOLTIP_ABILITY_SHAMAN_BEAMS_DAMAGE: Translatable = from("wynnlib.gameplay.shaman_damage_per_beam")
    val TOOLTIP_ABILITY_SHAMAN_TOTEM: Translatable = from("wynnlib.gameplay.shaman_totem")
    val TOOLTIP_ABILITY_SHAMAN_PUPPET: Translatable = from("wynnlib.gameplay.shaman_puppet")
    val TOOLTIP_ABILITY_SHAMAN_EFFIGY: Translatable = from("wynnlib.gameplay.shaman_effigy")
    val TOOLTIP_ABILITY_SHAMAN_BLOOD_POOL: Translatable = from("wynnlib.gameplay.shaman_blood_pool")
}